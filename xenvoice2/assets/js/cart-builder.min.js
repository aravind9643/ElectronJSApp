var XHR = {
    request: function (e, t) {
        var i = new XMLHttpRequest;
        i.onreadystatechange = function () {
            if (4 == this.readyState && 200 == this.status) {
                var e = {};
                try {
                    e = JSON.parse(i.responseText)
                } catch (e) {
                    throw "invalid json"
                }
                t(e)
            }
        }, i.open(e.method, e.url, !0), i.send()
    }
},
    Cart = {
        options: null,
        cart: {
            items: [],
            currency: null,
            expandedClass: null,
            expandedText: null,
            collapsedClass: null,
            collapsedText: null,
            addItem: function (e) {
                this.items.push(e), this.save()
            },
            removeItem: function (e) {
                this.items.splice(e, 1), this.save()
            },
            save: function () {
                localStorage.setItem("sc-items", JSON.stringify(this.items))
            },
            clear: function () {
                this.items = [], this.save()
            },
            collapsedViewEl: null,
            expandedViewEl: null
        },
        container: null,
        _isInitialized: !1,
        _checkoutBtnEle: null,
        isInitialized: function () {
            return this._isInitialized
        },
        init: function (e) {
            if (this.options = e, !this.options) throw "invalid options";
            return this.collapsedViewContainer = document.getElementById(e.collapsedViewCcontainerId), this.expandedViewContainer = document.getElementById(e.expandedViewContainerId), this.initializeCart(), this
        },
        initializeCart: function () {
            this.cart.currency = this.options.currency || {
                name: "INR",
                symbol: "Rs."
            };
            var e = localStorage.getItem("sc-items");
            e && (e = JSON.parse(e), this.cart.items = e), this.createCartCollapsedView(), this.createCartExpandedView(), this.collapseCart(), this._isInitialized = !0
        },
        updateCount: function () {
            if (document.getElementById("cart_updated_count"))
                document.getElementById("cart_updated_count").innerHTML = this.getItemsCount();
            var e = document.getElementsByClassName("cart-collapsed-view");
            e[0] && (this.getItemsCount() ? e[0].innerHTML = (this.options.collapsedText || "Cart") + " (" + this.getItemsCount() + ")" : e[0].innerHTML = this.options.collapsedText || "Cart")
        },
        createCartCollapsedView: function () {
            var e = document.createElement("div");
            e.className += this.options.collapsedClass || "cart-collapsed-view", e.innerHTML = this.options.collapsedText || "Cart", e.addEventListener("click", this.expandCart.bind(this), !1), this.addCollapsedViewCSS(e), this.collapsedViewContainer ? this.collapsedViewContainer.appendChild(e) : document.body.appendChild(e), this.cart.collapsedViewEl = e, this.updateCount()
        },
        createCartExpandedView: function () {
            var e = this.createPanel();
            this.createHeader(e), this.createItemsList(e), this.createFooter(e), this.expandedViewContainer ? this.expandedViewContainer.appendChild(e) : document.body.appendChild(e), this.cart.expandedViewEl = e
        },
        createPanel: function () {
            var e = document.createElement("div");
            return e.className += this.options.expandedClass || "cart-expanded-view", this.addExpandedViewCSS(e), e
        },
        createHeader: function (e) {
            var t = document.createElement("div");
            t.className += "cart-header", t.innerHTML = this.cart.expandedText || "Cart", t.style.padding = "0px 15px", t.style.marginBottom = "0px", t.style.display = "flex", t.style.alignItems = "center", t.style.justifyContent = "space-between", t.style.flexDirection = "row", t.style.height = "40px", t.style.backgroundColor = "#f9f9f9", t.style.borderBottom = "1px solid #f5f5f5";
            var i = document.createElement("button");
            i.className += "cart-minimize", i.style.outline = "none", i.innerHTML = '<i class="fal fa-times" aria-hidden="true"></i>', i.addEventListener("click", this.collapseCart.bind(this), !1), t.appendChild(i), e.appendChild(t)
        },
        createItemsList: function (e) {
            var t = document.createElement("div");
            t.className += "cart-items", t.style.padding = "15px 0px", t.style.maxHeight = 'calc(100vh - 188px)', t.style.overflowY = 'auto', t.style.marginBottom = "0px", this.refreshCartItemsUI(t), e.appendChild(t)
        },
        refreshCartItemsUI: function (e) {
            for (; e.firstChild;) e.removeChild(e.firstChild);
            if (this.getItemsCount()) {
                var t = document.createElement("table");
                t.className += "cart-table", t.style.width = "100%", t.style.borderSpacing = "0", t.style.borderCollapse = "collapse";
                var i = document.createElement("thead"),
                    a = document.createElement("tr"),
                    n = Cart.options.columns;
                this.options.showTotalPriceInRow && n.concat([{
                    title: "Total Price",
                    value: "totalPrice"
                }]), n.forEach(function (e) {
                    var t = document.createElement("th");
                    t.innerHTML = e.title, t.style.padding = "8px", t.style.paddingLeft = "16px", a.appendChild(t)
                }), a.appendChild(document.createElement("th")), i.appendChild(a), t.appendChild(i);
                for (var s = document.createElement("tbody"), l = 0; l < this.getItemsCount(); l++) {
                    var r = document.createElement("tr");
                    r.className += "cart-item";
                    for (var o = 0; o < Cart.options.columns.length; o++) {
                        var c;
                        (c = document.createElement("td")).style.border = "1px solid #aaa", c.style.fontWeight = "normal", c.style.padding = "8px", c.style.border = "0", c.style.borderBottom = "1px solid #f5f5f5", c.style.paddingLeft = "16px", c.innerHTML = this.cart.items[l][Cart.options.columns[o].value], r.appendChild(c)
                    }
                    if (this.options.showTotalPriceInRow) (c = document.createElement("td")).style.border = "1px solid #aaa", c.style.fontWeight = "normal", c.style.padding = "8px", c.innerHTML = this.cart.currency.symbol + " " + (this.cart.items[l].price * this.cart.items[l].quantity).toFixed(2), r.appendChild(c);
                    (c = document.createElement("td")).style.border = "1px solid #aaa", c.style.textAlign = 'right', c.style.border = "0", c.style.borderBottom = "1px solid #f5f5f5", c.style.fontWeight = "normal", c.style.padding = "8px", c.style.paddingLeft = "16px";
                    var d = document.createElement("button");
                    d.className += "cart-item-delete", d.innerHTML = '<i class="fal fa-trash-alt" aria-hidden="true"></i>', d.style.border = "none", d.style.outline = "none", d.style.borderRadius = "4px", d.style.padding = "6px 10px", d.style.cursor = "pointer", Cart.setupDeleteListener(d, l), c.appendChild(d), r.appendChild(c), s.appendChild(r)
                }
                t.appendChild(s), e.appendChild(t)
            } else {
                var p = document.createElement("div");
                p.className += "cart-empty", p.innerHTML = 'Your Cart is Empty.  <a id="itemClickHere" href="javascript:void(0);" oncontextmenu="return false;" style="color:#ffcd00;"  onclick="Cart.clickToAdd()">Click here</a> to add now.', p.style.fontStyle = "italic", p.style.fontWeight = "16px", p.style.textAlign = "center", p.style.padding = "25px 15px", e.appendChild(p)
            }
            this.refreshTotalCartValueUI()
        },
        setupDeleteListener: function (e, t) {
            e.addEventListener("click", function () {
                Cart.addItemRemoveListener(t)
            }, !1)
        },
        addItemRemoveListener: function (e) {
            this.removeItem(e)
        },
        createFooter: function (e) {
            var t = document.createElement("div");
            t.className += "cart-footer", t.innerHTML = "Total", t.style.paddingTop = "15px", t.style.marginTop = "15px", t.style.borderTop = "#f5f5f5", t.style.backgroundColor = "#f9f9f9";
            var i = document.createElement("div");
            i.className += "cart-amount", i.innerHTML = this.cart.currency.symbol + " " + this.getCartValue().toFixed(2), i.style.fontSize = "16px", i.style.fontWeight = "600", i.style.float = "right", t.appendChild(i);
            var a = document.createElement("div");
            a.className += "cart-checkout", a.style.paddingTop = "10px";
            var n = document.createElement("button");
            n.className += "cart-checkout-btn", n.innerHTML = "Checkout", this.getItemsCount() || (n.style.display = "none"), n.style.border = "none", n.style.outline = "none", n.style.border = "none", n.style.borderRadius = "4px", n.style.padding = "6px 12px", n.style.cursor = "pointer", this._checkoutBtnEle = n, n.addEventListener("click", function () {
                Cart.checkout()
            }, !1), a.appendChild(n);
            var s = document.createElement("span");
            s.className += "cart-checkout-wait", s.innerHTML = "Please wait....", s.style.display = "none", a.appendChild(s), t.appendChild(a), e.appendChild(t)
        },
        refreshTotalCartValueUI: function () {
            var e = document.getElementsByClassName("cart-amount");
            if (e.length && (e[0].innerHTML = this.cart.currency.symbol + " " + this.getCartValue().toFixed(2)), this._checkoutBtnEle)
                if (this.getCartValue() > 0) this._checkoutBtnEle.style.display = "block";
                else {
                    this._checkoutBtnEle.style.display = "none";
                    var t = document.getElementsByClassName("cart-checkout-wait");
                    t && (t[0].style.display = "none")
                }
        },
        addCollapsedViewCSS: function (e) {
            e.style.position = "fixed", e.style.bottom = "10px", e.style.right = "10px", e.style.padding = "6px 12px", e.style.fontSize = "16px", e.style.fontWeight = "600px", e.style.backgroundColor = "rgb(37, 43, 53)", e.style.color = "rgb(255, 255, 255)", e.style.cursor = "pointer", e.style.border = "1px solid rgb(170, 170, 170)", e.style.borderRadius = "4px", e.style.boxShadow = "inset 0 0 1px 0px rgba(0,0,0,.20), 0 1px 0 #fff;", e.style.visibility = "visible"
        },
        addExpandedViewCSS: function (e) {
            e.style.position = "fixed", e.style.top = "55px", e.style.right = "5px", e.style.zIndex = "999", e.style.padding = "0px", e.style.backgroundColor = "#ffffff", e.style.border = "1px solid #f5f5f5", e.style.borderRadius = "4px", e.style.width = "400px", e.style.boxShadow = "0px 0px 7px #bababa", e.visibility = "visible"
        },
        getCartValue: function () {
            var e = 0;
            return this.cart.items.forEach(function (t) {
                e += t.quantity * t.price
            }), e
        },
        getCartItems: function () {
            return this.cart.items
        },
        expandCart: function () {
            this.cart.collapsedViewEl.style.visibility = "hidden", this.cart.expandedViewEl.style.visibility = "visible"
        },
        collapseCart: function () {
            this.cart.expandedViewEl.style.visibility = "hidden", this.cart.collapsedViewEl.style.visibility = "visible"
        },
        addItem: function (e) {
            if (e.quantity = e.quantity || 1, this.options.checkForCapacity && this.cart.items.length >= this.options.capacity) {
                var t = this.options.onCapacityReached;
                t && t.callback.call(t.scope)
            } else {
                if (this.options.checkForUniqueness)
                    if (this.cart.items.filter(function (t) {
                        return t.name === e.name
                    }).length) {
                        var i = this.options.onDuplicateItemAddition;
                        return void (i && i.callback.call(i.scope, {
                            items: Cart.getCartItems(),
                            totalPrice: Cart.getCartValue()
                        }))
                    } this.cart.addItem(e), this.refreshCartItemsUI(document.getElementsByClassName("cart-items")[0]), this.updateCount()
            }
        },
        itemExists: function (e) {
            return !!this.cart.items.filter(function (t) {
                return t.name === e.name
            }).length
        },
        removeItem: function (e) {
            this.cart.removeItem(e), this.refreshCartItemsUI(document.getElementsByClassName("cart-items")[0]), this.updateCount()
        },
        checkout: function () {
            var e = this.options.onCheckout;
            e && e.callback.call(e.scope, {
                items: Cart.getCartItems(),
                totalPrice: Cart.getCartValue()
            })
        },
        clickToAdd: function () {
            var e = this.options.onAddItems;
            e && e.callback.call(e.scope, {})
        },
        getItemsCount: function () {
            return this.cart.items.length
        },
        clear: function () {
            this.cart.clear(), this.refreshCartItemsUI(document.getElementsByClassName("cart-items")[0]), this.updateCount()
        },
        loading: function () {
            var e = document.getElementsByClassName("cart-checkout-btn");
            if (e) {
                e[0].style.display = "none";
                var t = document.getElementsByClassName("cart-checkout-wait");
                t && (t[0].style.display = "inline-block");
            }
            var i = document.getElementsByClassName("cart-item-delete");
            if (i)
                for (var a = 0; a < i.length; a++) i[a].style.display = "none"
        }
    };